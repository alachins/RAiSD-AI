
<<<==============================================================================================o

   ooooooooo.         .o.        o8o   .oooooo..o oooooooooo.                   .o.       ooooo
   `888   `Y88.      .888.       `"'  d8P'    `Y8 `888'   `Y8b                 .888.      `888'
    888   .d88'     .8"888.     oooo  Y88bo.       888      888               .8"888.      888
    888ooo88P'     .8' `888.    `888   `"Y8888o.   888      888              .8' `888.     888
    888`88b.      .88ooo8888.    888       `"Y88b  888      888   8888888   .88ooo8888.    888
    888  `88b.   .8'     `888.   888  oo     .d8P  888     d88'            .8'     `888.   888
   o888o  o888o o88o     o8888o o888o 8""88888P'  o888bood8P'             o88o     o8888o o888o

o==============================================================================================>>>

 RAiSD-AI, Raised Accuracy in Sweep Detection using AI (version 4.0, released in July 2024)
 Copyright (C) 2017-2024, and GNU GPL'd, by Nikolaos Alachiotis and Pavlos Pavlidis
 Contact: n.alachiotis@utwente.nl and pavlidisp@gmail.com
 Code contributions: Sjoerd van den Belt and Hanqing Zhao

 				    * * * * *

 This is RAiSD version 4.0, released in July 2024.

 RAiSD-AI
	 -n STRING
	 -I STRING

	-- SNP and SAMPLE HANDLING

	[-L INTEGER]
	[-S STRING]
	[-m FLOAT]
	[-M 0|1|2|3]
	[-y INTEGER]
	[-X STRING]
	[-B INTEGER INTEGER]
	[-o]

	-- SLIDING WINDOW and MU STATISTIC 

	[-w INTEGER]
	[-c INTEGER]
	[-G INTEGER]
	[-VAREXP FLOAT]
	[-SFSEXP FLOAT]
	[-LDEXP FLOAT]

	-- STANDARD OUTPUT and REPORTS

	[-f]
	[-s]
	[-t]
	[-p]
	[-O]
	[-R]
	[-P]
	[-D]
	[-A FLOAT]

	-- ACCURACY and SENSITIVITY EVALUATION 

	[-T INTEGER]
	[-d INTEGER]
	[-k FLOAT]
	[-l FLOAT]

	-- FASTA-to-VCF CONVERSION 

	[-C STRING]
	[-C2 STRING]
	[-H STRING]
	[-E STRING]

	-- VCF-to-MS CONVERSION 

	[-Q INTEGER]

	-- COMMON-OUTLIER ANALYSIS 

	[-CO STRING INTEGER INTEGER] or [-CO STRING INTEGER INTEGER STRING INTEGER INTEGER]
	[-COT FLOAT]
	[-COD INTEGER]

	-- RAiSD-AI OPERATION MODES 

	[-op IMG-GEN | MDL-GEN | MDL-TST | SWP-SCN]

	-- RAiSD-AI DATA GENERATION (MODE: IMG-GEN) 

	 -icl STRING
	 -its INTEGER
	[-poc]
	[-ips INTEGER]
	[-iws INTEGER]
	[-bin]
	[-typ 0|1|2]
	[-w INTEGER]

	-- RAiSD-AI TRAINING (MODE: MDL-GEN) 

	 -I STRING
	[-arc SweepNet | FAST-NN | SweepNetRecomb]
	[-e INTEGER]

	-- RAiSD-AI INFERENCE (MODE: MDL-TST) 

	 -mdl STRING
	 -I STRING
	 -clp INTEGER STRING=STRING STRING=STRING ...

	-- RAiSD-AI SWEEP SCAN (MODE: SWP-SCN) 

	 -pci INTEGER INTEGER ...

	-- RAiSD-AI ADDITIONAL PARAMETERS 

	[-frm]
	[-gpu]
	[-useTF]

	-- MISCELLANEOUS PARAMETERS 

	[-b]
	[-a INTEGER]

	-- HELP and VERSION NOTES 

	[-h]
	[-v]


 PARAMETER DESCRIPTION

	-n	Provides a unique run ID that is used to name the output files, i.e., the info file and the report(s).
	-I	Provides the path to the input file. Supported file formats: ms, vcf, fasta.

	-- SNP and SAMPLE HANDLING 

	-L	Provides the size of the region in basepairs for ms files. See -B option for vcf files.
	-S	Provides the path to the list of samples to be processed (supported only with VCF).
	-m	Provides the threshold value for excluding SNPs with minor allele frequency < threshold (0.0-1.0).
	-M	Indicates the missing-data handling strategy (0: discards SNP (default), 1: imputes N per SNP,
		2: represents N through a mask, 3: ignores allele pairs with N).
	-y	Provides the ploidy (integer value), used to correctly represent missing data.
	-X	Provides the path to a tab-delimited file that contains regions per chromosome (one per line) to be
		excluded from the analysis (Format: chromosome [tab] regionStart [tab] regionStop).
	-B	Provides the chromosome size in basepairs (first INTEGER) and SNPs (second INTEGER) for vcf files that
		contain a single chromosome. If -B is not provided, or the input vcf file contains multiple chromosomes,
		RAiSD will determine the respective values by parsing each chromosome in its entirety before processing,
		which will lead to slightly longer overall execution time.
	-o	Enables dataset check and reordering of the input vcf file (only unzipped vcf files are supported).

	-- SLIDING WINDOW and MU STATISTIC 

	-w	Provides the window size (integer value). The default value is 50 (empirically determined).
	-c	Provides the slack for the SFS edges to be used for the calculation of mu_SFS. The default value is 1
		(singletons and S-1 snp class, where S is the sample size).
	-G	Provides the grid size to specify the total number of evaluation points across the data.
		When used, RAiSD reports mu statistic scores at equidistant locations between the first and last SNPs.
	-VAREXP	Provides the exponent for the mu-var factor (default: 1.0).
	-SFSEXP	Provides the exponent for the mu-sfs factor (default: 1.0).
	-LDEXP	Provides the exponent for the mu-ld factor (default: 1.0).

	-- STANDARD OUTPUT and REPORTS 

	-f	Overwrites existing run files under the same run ID.
	-s	Generates a separate report file per set.
	-t	Removes the set separator symbol from the report(s).
	-p	Generates the output file RAiSD_Samples.STRING, where STRING is the run ID, comprising a list of samples
		in the input file (supported only with VCF).
	-O	Shows progress on the display device (at snp set granularity).
	-R	Includes additional information in the report file(s), i.e., window start and end, and the mu-statistic
		factors for variation, SFS, and LD.
	-P	Generates four plots (for the three mu-statistic factors and the final score) in one PDF file per set of
		SNPs in the input file using Rscript (activates -s, -t, and -R).
	-D	Generates a site report, e.g., total, discarded, imputed etc.
	-A	Provides a probability value to be used for the quantile function in R, and generates a Manhattan plot for
		the final mu-statistic score using Rscript (activates -s, -t, and -R).

	-- ACCURACY and SENSITIVITY EVALUATION 

	-T	Provides the selection target (in basepairs) and calculates the average distance (over all datasets in the
		input file) between the selection target and the reported locations.
	-d	Provides a maximum distance from the selection target (in base pairs) to calculate success rates,
		i.e., reported locations in the proximity of the target of selection (provided via -T).
	-k	Provides the false positive rate (e.g., 0.05) to report the corresponding reported score after sorting
		the reported locations for all the datasets in the input file.
	-l	Provides a threshold for each statistic, reported by a previous run using a false positive rate (e.g., 0.05, via -k)
		to report the true positive rate. Syntax: "-l Number_of_Thresholds label1=thres1 label2=thres2 ...", where
		label in {var, sfs, ld, mu, pcl0, pcl1}. Example: "-l 6 var=0.1 sfs=0.2 ld=0.3 mu=0.4 pcl0=0.5 pcl1=0.6".
		Labels pcl0 and pcl1 refer to CNN positive classes.

	-- FASTA-to-VCF CONVERSION 

	-C	Provides the outgroup to be used for the ancestral states (REF field in VCF). The first ingroup sequence
		is used if the outgroup is not given or found.
	-C2	Provides a second outgroup to be used for the ancestral states (REF field in VCF).
	-H	Provides the chromosome name (CHROM field in VCF) to overwrite default "chrom" string.
	-E	Converts input FASTA to VCF and terminates execution without further processing.

	-- VCF-to-MS CONVERSION 

	-Q	Converts an input VCF to ms and provides the memory size (in MB) to be allocated for the conversion. Requires -L.

	-- COMMON-OUTLIER ANALYSIS 

	-CO	Provides the report name (and column indices for positions and scores) to be used for common-outlier analysis.
		To perform a common-outlier analysis using RAiSD and SweeD, use -CO like this: "-CO SweeD_Report.SweeD-Run-Name 1 2".
		The SweeD report must not contain a header. If you have already run RAiSD on your data and only want to perform a
		common-outlier analysis, use -CO like this: "-CO SweeD_Report.SweeD-Run-Name 1 2 RAiSD_Report.RAiSD-Run-Name 1 X",
		where X is the index of the column you want to use depending on the RAiSD report.
		To use the mu-statistic, set Y=2 if RAiSD was invoked with the default parameters, or set Y=7 if -R was explicitly
		provided or implicitly activated through some other command-line parameter. Again, the RAiSD report must not contain
		a header.
	-COT	Provides the cut-off threshold for identifying top outliers per report (default: 0.05, i.e., top 5%). 
	-COD	Provides the maximum distance (in number of sites) between outlier points in the provided reports to identify
		matching outlier positions reported by RAiSD and SweeD. Based on the accuracy of the implemented methods in SweeD
		and RAiSD, we typically set -COD to a value between 100 and 400 sites (default: 1, i.e., exact match).

	-- RAiSD-AI OPERATION MODES 

	-op	Changes the operation mode from RSD-DEF (RAiSD default) to: IMG-GEN | MDL-GEN | MDL-TST | SWP-SCN.

		IMG-GEN: Generates images (.png) that can be used for training (MDL-GEN) and/or inference (MDL-TST).
		         Output directory: RAiSD_Images.runID (runID is the run ID that is set with -n).
		MDL-GEN: Generates a neural network model (training).
		         Output directory: RAiSD_Model.runID (runID is the run ID that is set with -n).
		MDL-TST: Tests a neural network model (inference) and reports various metrics (accuracy, F1-score etc)
			 in file RAiSD_Info.runID (runID is the run ID that is set with -n).
		SWP-SCN: Performs full scans for selective sweeps using a CNN generated by a previous MDL-GEN run. Requires: -G.
		         All generated images are stored in folder RAiSD_Grid.runID (runID is the run ID that is set with -n).
		RSD-DEF: Standard RAiSD execution using only the mu-statistic (no CNN)

	-- RAiSD-AI DATA GENERATION (MODE: IMG-GEN)

	-icl	Provides the class label (Image Class Label). A folder with this name will be created in RAiSD_Images.runID.
	-its	Provides the target site position for generating images (Image Target Site). This position corresponds to the center of
		the first generated image. See next flag (-poc) for data-generation modes. If ips>1, additional images are positioned
		a number of SNPs before and after the first image.
	-poc	Changes the data-generation mode from using SNP-driven windows (default) to constructing position-centered windows.
		When SNP-driven windows are used, the SNP located closest to the -its position (in bp) becomes the central SNP in the
		window and an equal number of SNPs are placed on both sides. When position-centered windows are used, the -its position
		(in bp) is (as close as possible to) the midpoint between the leftmost and rightmost SNPs per window.
	-ips	Provides the number of images to be created per simulation (Images Per Simulation) (default: 1).
	-iws	Provides the window step for creating images (Image Window Step).
	-bin	Converts image data to a custom binary format (.snp). Only supported by the PyTorch implementation. [PYTORCH-ONLY]
	-typ	Specifies the data type. When generating images (PNG) -> 0: raw data in all channels (default), 1: raw data in one channel
		and pairwise snp distances in the other channels, 2: raw data in one channel and mu-var-scaled values in the other channels.
		When generating data in custom binary format -> 0: raw snp data and positions (default), 1: derived allele frequencies and positions.
	-w	In this mode (data generation), the window width provided via -w is used to generate images (image width) (default: 50).

	-- RAiSD-AI TRAINING (MODE: MDL-GEN) 

	-I	In this mode (Training), -I provides the path to the directory where the training data is stored. This can be
		directory RAiSD_Images.some-runID, where some-runID is the run ID of some previous run in data generation mode.
		The trained model will be stored in RAiSD_Model.runID, where runID is provided through -n.
	-arc	Specifies the neural network architecture: SweepNet (TF default) | FAST-NN (PyTorch default) | SweepNetRecomb (4-class model).
	-e	Provides the number of epochs (default: 10).
	-cl4	Provides four pairings (using '=') between class labels and corresponding folder names in the RAiSD_Images.some-runID
		directory (provided through -I). They are organized into two groups, 1 and 2, to carry out two simultaneous binary
		classifications. This is only supported by SweepNetRecombination.
		Syntax: "-cl4 label00=folderA label01=folderB label10=folderC label11=folderD", where label00 through 11 are the label identifiers,
		and folderA through D are in the directory specified via -I. label00 and label01 are Group 0 while label10 and label11 are Group 1. 

	-- RAiSD-AI INFERENCE (MODE: MDL-TST) 

	-mdl	Provides a path to the directory where the trained CNN model is stored. This should be the RAiSD_Model.some-runID,
		where some-runID is the run ID of some previous run in model generation mode (Training).
	-I	In this mode (model test), -I provides the path to the directory where the test data is stored. This can be
		directory RAiSD_Images.some-runID, where some-runID is the run ID of some previous run in data generation mode.
		This directory should contain one folder with test data for each class.
	-clp	Provides the number of class tests followed by an equal number of pairings (using '=') between the class labels and
		the corresponding folder names in the RAiSD_Images.some-runID directory (provided through -I).
		Example: "-clp 2 label1=folderA label2=folderB", where label1 and label2 are the label names, and folderA and folderB
		are in the directory specified via -I.

	-- RAiSD-AI SWEEP SCAN (MODE: SWP-SCN) 

	-pci	Provides the number of positive classes (1 for SweepNet and FAST-NN, 2 for SweepNetRecombination) followed
		by the positive class indices. The class index can be found in parentheses after the class label in file
		RAiSD_Model.some-runID/classLabels.txt, where some-runID is the run ID of the MDL-GEN run that generated the CNN model.
		Example: "-pci 1 1" for SweepNet/FAST-NN, "-pci 2 1 3" for SweepNetRecombination.

	-- RAiSD-AI ADDITIONAL PARAMETERS 

	-frm	Removes the directories RAiSD_Images.runID (IMG-GEN) and RAiSD_Grid.runID (SWP-SCN), if they already exist.
		runID is provided through -n.
	-gpu	Changes the target hardware platform to be used for training (MDL-GEN) or inference for model testing (MDL-TST)
		and sweep scans (SWP-SCN) from CPU (default) to GPU (CUDA must be enabled).
	-useTF	Uses TensorFlow (default: PyTorch). Only SweepNet is currently implemented in TensorFlow. 

	-- MISCELLANEOUS PARAMETERS 

	-b	Indicates that the input file is in mbs format.
	-a	Provides a seed for the random number generator.

	-- HELP and VERSION NOTES 

	-h	Prints this help message.
	-v	Prints version information.

